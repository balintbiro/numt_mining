res[res$external_gene_name=='ITGA5']
genes <- c('CCDC','SMPD','GSDMC','GKN2','UGTA1','MLY9','CAPN8')
lapply(genes,function(gene) res[res$external_gene_name==gene])
res[res$external_gene_name=='GRK3']
res.loc[res$external_gene_name=='GRK3']
res$log2FoldChange[res$external_gene_name=='GRK3']
res$log2FoldChange[res$external_gene_name=='CCDC']
res$log2FoldChange[res$external_gene_name=='CCDC']
res$log2FoldChange[res$external_gene_name=='SMPD']
res$log2FoldChange[res$external_gene_name=='GKN2']
res$log2FoldChange[res$external_gene_name=='UGTA1']
res$log2FoldChange[res$external_gene_name=='MLY9']
res$log2FoldChange[res$external_gene_name=='CAPN8']
res$log2FoldChange[res$external_gene_name=='ITGA7']
res$log2FoldChange[res$external_gene_name=='ITGA5']
res$pvalue[res$external_gene_name=='GRK3']
res$pvalue[res$external_gene_name=='CCDC']
res$pvalue[res$external_gene_name=='SMPD']
res$pvalue[res$external_gene_name=='GKN2']
res$pvalue[res$external_gene_name=='CAPN8']
res$pvalue[res$external_gene_name=='GSDMC']
res$log2FoldChange[res$external_gene_name=='GSDMC']
res$pvalue[res$external_gene_name=='ITGA5']
res$pvalue[res$external_gene_name=='ITGA7']
gene_counts$gene_id[gene_names]
gene_counts
gene_counts$external_gene_name <- gene_names$external_gene_name
gene_counts
genes <- c('CCDC','SMPD','GSDMC','GKN2','UGTA1','MLY9','CAPN8','ITGA7','ITGA5')
gene_counts[genes,]
gene_counts[gene_counts$external_gene_name %in% genes]
gene_counts$external_gene_name
gene_counts[gene_counts$external_gene_name %in% genes]
genes
gene_counts[gene_counts$external_gene_name %in% as.list(genes)]
gene_counts[gene_counts$external_gene_name %in% genes,]
#get working directory
if (getwd()!="/Users/birobalint/Documents/Projects/lda_rna_seq/code/"){
setwd("/Users/birobalint/Documents/Projects/lda_rna_seq/code/")
}
print(getwd())
write.csv(gene_counts[gene_counts$external_gene_name %in% genes,],'Documents/Projects/lda_rna_seq/results/gene_counts_subset.csv')
#load library
library(biomaRt)
#list all avaialable DBs
listEnsembl()
#use genes DB
ensembl <- useEnsembl(biomart='genes',
mirror='useast')
#check head
head(listDatasets(ensembl))
listDatasets(ensembl)
#check head
head(listDatasets(ensembl))
#check head
ensembl
#check head
head(ensembl)
#check head
listDatasets(ensembl)
listDatasets(ensembl)
#check head
typeof(ensembl)
#use genes DB
ensembl <- useEnsembl(biomart='genes',
dataset='dmleanogaster_gene_ensembl'
mirror='useast')
#use genes DB
ensembl <- useEnsembl(biomart='genes',
dataset='dmleanogaster_gene_ensembl',
mirror='useast')
#use genes DB
ensembl <- useEnsembl(biomart='genes',
dataset='dmelanogaster_gene_ensembl',
mirror='useast')
ensebml
ensembl
searchAttributes(mart=ensembl, pattern='dpi2a')
searchAttributes(mart=ensembl, pattern='dip2a')
head(ensembl)
head(listAttributes(ensembl))
listAttributes(ensembl)
searchFilters(mart=ensembl, pattern='gene')
searchFilters(mart=ensembl, pattern='sequence')
searchFilters(mart=ensembl, pattern='seq')
getSequence(id = 'dip2A')
mart <- useMart(ensembl)
#use genes DB
ensembl <- useEnsembl(biomart='genes',
dataset='dmelanogaster_gene_ensembl',
mirror='useast')
mart <- useMart(ensembl)
mart <- useMart('ensembl',dataset='dmelanogaster_gene_ensembl')
getSequence(id='DIP2A',
type='gene_name',
seqType='dna',
mart=mart)
getSequence(id='DIP2A',
type='gene_name',
seqType='gene_exon_intron',
mart=mart)
listFilters(mart)
listFilters(mart,what=c('symbol'))
listFilters(mart,what=c('name'))
listFilters(mart,what=c('external_gene_name'))
getSequence(id='DIP2A',
type='external_gene_name',
seqType='gene_exon_intron',
mart=mart)
seq <- getSequence(id='DIP2A',
type='external_gene_name',
seqType='gene_exon_intron',
mart=mart)
seq
seq <- getSequence(id='DIP2B',
type='external_gene_name',
seqType='gene_exon_intron',
mart=mart)
seq
seq <- getSequence(id='C21orf106',
type='external_gene_name',
seqType='gene_exon_intron',
mart=mart)
seq
seq <- getSequence(id='KIAA0184',
type='external_gene_name',
seqType='gene_exon_intron',
mart=mart)
seq
listFilters(mart,what=c('entrez'))
listFilters(mart,what=c('NCBI'))
listFilters(mart,what=c('name'))
#entrezgeneid
seq <- getSequence(id='ENSG00000160305',
type='ensembl_gene_id',
seqType='gene_exon_intron',
mart=mart)
seq
#entrezgeneid
seq <- getSequence(id='23181',
type='entrezgeneid',
seqType='gene_exon_intron',
mart=mart)
#entrezgeneid
seq <- getSequence(id='23181',
type='entrezgene_id',
seqType='gene_exon_intron',
mart=mart)
#entrezgeneid
seq <- getSequence(id=23181,
type='entrezgene_id',
seqType='gene_exon_intron',
mart=mart)
#entrezgeneid
seq <- getSequence(symbol='DIP2A',
type='entrezgene_id',
seqType='gene_exon_intron',
mart=mart)
#load required libraries
library(DESeq2)
library(gplots)
library(biomaRt)
library(ggplot2)
library(pheatmap)
library(pathview)
library(ggridges)
library(ggnewscale)
library(enrichplot)
library(EnhancedVolcano)
library(clusterProfiler)
#get working directory
if (getwd()!="/Users/birobalint/Documents/Projects/lda_rna_seq/code/"){
setwd("/Users/birobalint/Documents/Projects/lda_rna_seq/code/")
}
print(getwd())
#load data
gene_counts <- read.csv('../results/gene_counts.csv',
sep=',')
colnames(gene_counts) <- c('gene_id','1','3','4','6','7','8','9')
head(gene_counts)
#create metadata table
metadata <- as.data.frame(cbind(idx=colnames(gene_counts)[c(-1)],
condition=c('control','control','lda','lda','lda','lda','lda'),
age=c('a','a','a','j','j','j','j'),
genotype1=c('T/C','T/C','T/C','T/C','T/T','C/C','C/C'),
genotype2=c('HE','HE','HE','HE','WT','HO','HO')))
metadata
#create deseq matrix for condition
dds <- DESeqDataSetFromMatrix(countData=gene_counts,
colData=metadata,
design=~condition, tidy=TRUE)
d.dds <- DESeq(dds)
#transofrm deseq data
vs_cond_data <- varianceStabilizingTransformation(d.dds)
#visualize PCA
plotPCA(vs_cond_data,intgroup=c('condition'))
ggsave('../results/pca.tiff',dpi=500)
#heatmap of count matrix https://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
ntd <- normTransform(d.dds)
selection <- order(rowMeans(counts(d.dds, normalized=TRUE)),
decreasing=TRUE)
df <- as.data.frame(colData(d.dds)[,c("condition","age","genotype1")])
tiff('../results/heatmap.tiff',width=10,height=13,units="cm",res=500)
heatmap <- pheatmap(assay(ntd)[selection,],cluster_rows = TRUE, show_rownames = FALSE,
cluster_cols = TRUE, annotation_col = df)
dev.off()
#get gene names from Ensembl gene id
#create Ensembl query
ensembl <- useEnsembl(biomart='genes',
dataset='btaurus_gene_ensembl',
mirror='uswest')
#get data
gene_names <- getBM(attributes=c('external_gene_name','ensembl_gene_id'),
filters=c('ensembl_gene_id'),
values=gene_counts$gene_id,
mart=ensembl)
res <- results(d.dds,
contrast=c('condition','lda','control'))
res <- lfcShrink(d.dds,
contrast=c('condition','lda','control'),
res=res,
type='normal')
#visualize volcano plot
EnhancedVolcano(res,
lab=gene_names$external_gene_name,
title='',
x='log2FoldChange',
y='pvalue',
xlim=c(-6,6),
ylim=c(0,10))
ggsave('../results/volcano.tiff',dpi=500)
#gsea https://learn.gencore.bio.nyu.edu/rna-seq-analysis/gene-set-enrichment-analysis/
organism = "org.Bt.eg.db"
#BiocManager::install(organism, character.only = TRUE)
library(organism, character.only = TRUE)
#get fc values
original_gene_list <- res$log2FoldChange
#name gene list
names(original_gene_list) <- rownames(res)
# omit any NA values
gene_list<-na.omit(original_gene_list)
# sort the list in decreasing order (required for clusterProfiler)
gene_list = sort(gene_list, decreasing = TRUE)
#gsea
gse <- gseGO(geneList=gene_list,
ont ="ALL",
keyType = "ENSEMBL",
nPerm = 10000,
minGSSize = 3,
maxGSSize = 800,
pvalueCutoff = 0.05,
verbose = TRUE,
OrgDb = organism,
pAdjustMethod = "none")
dotplot(gse, showCategory=10, split=".sign") + facet_grid(.~.sign)+
labs(y='GO terms')+
theme(axis.text.y=element_text(size=8))
ggsave('../results/go_enrichment.tiff',dpi=500)
#enrichment map
BiocManager::install("enrichplot")
#enrichment map
BiocManager::install("enrichplot")
req <- pairwise_termsim(gse)
emapplot(
req,
layout='grid',
repel=TRUE,
cex_label_category=.55,
group_category=TRUE
)
#enrichment map
BiocManager::install("enrichplot")
req <- pairwise_termsim(gse)
emapplot(
req,
layout='grid',
repel=TRUE,
cex_label_category=.55,
group_category=TRUE
)
#enrichment map
BiocManager::install("enrichplot")
req <- pairwise_termsim(gse)
emapplot(
req,
layout='grid',
repel=TRUE,
cex_label_category=.55,
group_category=TRUE
)
ggsave('../results/network.tiff',dpi=500)
BiocManager::install("enrichplot")
#enrichment map
req <- pairwise_termsim(gse)
emapplot(
req,
layout='grid',
repel=TRUE,
cex_label_category=.55,
group_category=TRUE
)
remove.packages("ggnewscale")
.libPaths()
remove.packages("ggnewscale",lib=.libPaths()[1])
#enrichment map
req <- pairwise_termsim(gse)
emapplot(
req,
layout='grid',
repel=TRUE,
cex_label_category=.55,
group_category=TRUE
)
#enrichment map
install.packages("ggnewscale")
install.packages("ggnewscale")
req <- pairwise_termsim(gse)
#load required libraries
library(DESeq2)
library(gplots)
library(biomaRt)
library(ggplot2)
library(pheatmap)
library(pathview)
library(ggridges)
library(ggnewscale)
library(enrichplot)
library(EnhancedVolcano)
library(clusterProfiler)
#get working directory
if (getwd()!="/Users/birobalint/Documents/Projects/lda_rna_seq/code/"){
setwd("/Users/birobalint/Documents/Projects/lda_rna_seq/code/")
}
print(getwd())
#load data
gene_counts <- read.csv('../results/gene_counts.csv',
sep=',')
colnames(gene_counts) <- c('gene_id','1','3','4','6','7','8','9')
head(gene_counts)
#create metadata table
metadata <- as.data.frame(cbind(idx=colnames(gene_counts)[c(-1)],
condition=c('control','control','lda','lda','lda','lda','lda'),
age=c('a','a','a','j','j','j','j'),
genotype1=c('T/C','T/C','T/C','T/C','T/T','C/C','C/C'),
genotype2=c('HE','HE','HE','HE','WT','HO','HO')))
metadata
#create deseq matrix for condition
dds <- DESeqDataSetFromMatrix(countData=gene_counts,
colData=metadata,
design=~condition, tidy=TRUE)
d.dds <- DESeq(dds)
#transofrm deseq data
vs_cond_data <- varianceStabilizingTransformation(d.dds)
#visualize PCA
plotPCA(vs_cond_data,intgroup=c('condition'))
ggsave('../results/pca.tiff',dpi=500)
#heatmap of count matrix https://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
ntd <- normTransform(d.dds)
selection <- order(rowMeans(counts(d.dds, normalized=TRUE)),
decreasing=TRUE)
df <- as.data.frame(colData(d.dds)[,c("condition","age","genotype1")])
tiff('../results/heatmap.tiff',width=10,height=13,units="cm",res=500)
heatmap <- pheatmap(assay(ntd)[selection,],cluster_rows = TRUE, show_rownames = FALSE,
cluster_cols = TRUE, annotation_col = df)
dev.off()
#get gene names from Ensembl gene id
#create Ensembl query
ensembl <- useEnsembl(biomart='genes',
dataset='btaurus_gene_ensembl',
mirror='uswest')
#get data
gene_names <- getBM(attributes=c('external_gene_name','ensembl_gene_id'),
filters=c('ensembl_gene_id'),
values=gene_counts$gene_id,
mart=ensembl)
res <- results(d.dds,
contrast=c('condition','lda','control'))
res <- lfcShrink(d.dds,
contrast=c('condition','lda','control'),
res=res,
type='normal')
#visualize volcano plot
EnhancedVolcano(res,
lab=gene_names$external_gene_name,
title='',
x='log2FoldChange',
y='pvalue',
xlim=c(-6,6),
ylim=c(0,10))
ggsave('../results/volcano.tiff',dpi=500)
#gsea https://learn.gencore.bio.nyu.edu/rna-seq-analysis/gene-set-enrichment-analysis/
organism = "org.Bt.eg.db"
#BiocManager::install(organism, character.only = TRUE)
library(organism, character.only = TRUE)
#get fc values
original_gene_list <- res$log2FoldChange
#name gene list
names(original_gene_list) <- rownames(res)
# omit any NA values
gene_list<-na.omit(original_gene_list)
# sort the list in decreasing order (required for clusterProfiler)
gene_list = sort(gene_list, decreasing = TRUE)
#gsea
gse <- gseGO(geneList=gene_list,
ont ="ALL",
keyType = "ENSEMBL",
nPerm = 10000,
minGSSize = 3,
maxGSSize = 800,
pvalueCutoff = 0.05,
verbose = TRUE,
OrgDb = organism,
pAdjustMethod = "none")
dotplot(gse, showCategory=10, split=".sign") + facet_grid(.~.sign)+
labs(y='GO terms')+
theme(axis.text.y=element_text(size=8))
ggsave('../results/go_enrichment.tiff',dpi=500)
#enrichment map
#install.packages("ggnewscale")
req <- pairwise_termsim(gse)
emapplot(
req,
layout='grid',
repel=TRUE,
cex_label_category=.55,
group_category=TRUE
)
ggsave('../results/network.tiff',dpi=500)
bs <- bootstrap.pml(fitGTR, bs=2, optNni=TRUE,
control = pml.control(trace = 0))
#######new
distace_matrix <- dist.ml(as.phyDat(alignment))
library(seqinr)
library(adegenet)
library(ape)
library(ggtree)
library(DECIPHER)
library(viridis)
library(ggplot2)
library(phangorn)
#read in alignment (previously generated with clustal omega)
alignment <- read.alignment(
'../../data/aligned_mtDNAs.fa',
format="fasta"
)
#read in alignment (previously generated with clustal omega)
alignment <- read.alignment(
'../../data/aligned_mtDNAs.fa',
format="fasta"
)
#set working directory
getwd()
setwd('Documents/Projects/numt_mining/code/ncbi/')
#read in alignment (previously generated with clustal omega)
alignment <- read.alignment(
'../../data/aligned_mtDNAs.fa',
format="fasta"
)
#calculate distance matrix
distance_matrix <- dist.alignment(
alignment,
matrix="similarity"
)
#######new
distace_matrix <- dist.ml(as.phyDat(alignment))
treeNJ <- NJ(distance_matrix)
fit <- pml(treeNJ,data=as.phyDat(alignment))
fitJC <- optim.pml(fit,rearrangement = 'NNI')
fitGTR <- optim.pml(fitJC,model='GTR',optInv = TRUE,optGamma = TRUE,
rearrangement = 'NNI',control=pml.control(trace=0))
bs <- bootstrap.pml(fitGTR, bs=2, optNni=TRUE,
control = pml.control(trace = 0))
plotBS(midpoint(fitJC$tree), bs, p = 50, type="p")
cons_tree<-consensus(bs)
ggtree(consensus(bs))
ggtree(consensus(bs),layout='circular')
bs <- bootstrap.pml(fitGTR, bs=100, optNni=TRUE,
control = pml.control(trace = 0))
ggtree(consensus(bs),layout='circular')
tree<-ggtree(consensus(bs),layout='circular')
pwd
getwd()
write.tree(tree,file='../../results/gtr_tree.nex')
write.tree(consensus(bs),file='../../results/gtr_tree.nex')
trial_tree<-read.tree('../../results/gtr_tree.nex')
ggtree(trial_tree)
ggtree(trial_tree,layout='circular')
ggtree(trial_tree,layout='circular')+geom_tiplab()
debugSource("~/Documents/Projects/numt_mining/code/ncbi/phylogenetic.R", echo=TRUE)
setwd('Documents/Projects/numt_mining/code/ncbi/')
getwd
getwd()
trial_tree<-read.tree('../../results/gtr_tree_trial.nex')
ggtree(trial_tree,layout='circular')+geom_tiplab()
ggtree(trial_tree,layout='circular')+geom_tiplab()
phytree+geom_tiplab()
phytree<-ggtree(trial_tree,layout='circular')
phytree+geom_tiplab()
trial_tree<-read.tree('../../results/gtr_tree.nex')
phytree<-ggtree(trial_tree,layout='circular')
phytree+geom_tiplab()
ggtree(trial_tree,layout='circular')+geom_tiplab()
ggtree(trial_tree,layout='circular')
trial_tree<-read.tree('../../results/gtr_tree.nex')
ggtree(trial_tree,layout='circular')
trial_tree<-read.tree('../../results/gtr_tree.nex')
ggtree(trial_tree,layout='circular')
ggtree(trial_tree,layout='circular')
trial_tree<-read.tree('../../results/gtr_tree.nex')+geom_tiplab()
write.tree(consensus(bs),file='../../results/gtr_tree.nex')
ggtree(trial_tree,layout='circular')+geom_tiplab()
ggtree(trial_tree)+geom_tiplab()

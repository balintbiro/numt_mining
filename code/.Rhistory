#load the package
library(biomaRt)
listEnsembl()
ensembl <- useEnsembl(biomart='mouse_strains')
listDatasets(ensembl)
ensembl <- useEnsembl(biomart='genes')
listDatasets(ensembl)
searchDatasets(mart = ensembl, pattern = "spretus")
ensembl_db<-useEnsembl(biomart='gene',#select the desired database, all available listEnsembl()
dataset='mspretus_gene_ensembl',#select the desired dataset, all available listDatasets(ensembl)
mirror='uswest')#select the mirror, options -->useast,uswest,asia,www
listEnsembl()
ensembl_db<-useEnsembl(biomart='genes',#select the desired database, all available listEnsembl()
dataset='mspretus_gene_ensembl',#select the desired dataset, all available listDatasets(ensembl)
mirror='uswest')#select the mirror, options -->useast,uswest,asia,www
#get the strain specific genomic regions
genomic_regions<-scan('/Volumes/motilin/balint/numt/mice_strains_numt/genomic_regions/mmspretus_gene_ensembl.txt',character())
#get the strain specific genomic regions
genomic_regions<-scan('/Volumes/motilin/balint/numt/mice_strains_numt/genomic_regions/mm_spretus_gene_ensembl.txt',character())
#function for querying Ensembl
ensembl_query<-function(genomic_region){
ensembl<-getBM(attributes=c('external_gene_name'),
filters=c('chromosomal_region'),#all available listFilters(ensembl), search for filters searchFilters(mart=ensembl_db,pattern='sequence')
values=list(genomic_region),#all available listAttributes(ensembl), search for attributes searchAtrributes(mart=ensembl_db,pattern='sequence')
mart=ensembl_db)
return(ensembl)
}
genes<-sapply(genomic_regions,ensembl_query)
genes<-unlist(genes)
#create dataframe from stacked named lists
df<-stack(genes)
df#write output csv
write.csv(df,'/Volumes/motilin/balint/numt/mice_strains_numt/gene_ids/mmspretus.csv')
